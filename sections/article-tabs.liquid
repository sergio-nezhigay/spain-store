{% comment %}
  Article Tabs Section
  Displays article metafields in tabbed format (supports up to 5 tabs)
{% endcomment %}

{% comment %} Check if any tabs exist {% endcomment %}
{% assign has_tabs = false %}
{% for i in (1..5) %}
  {% assign tab_key = 'tab_' | append: i | append: '_title' %}
  {% if article.metafields.custom[tab_key] %}
    {% assign has_tabs = true %}
    {% break %}
  {% endif %}
{% endfor %}

{% if has_tabs %}
  <div class="section-background color-{{ section.settings.color_scheme }}"></div>
  <div
    class="section section--{{ section.settings.section_width }} spacing-style color-{{ section.settings.color_scheme }}"
    style="{% render 'spacing-padding', settings: section.settings %}"
  >
    <div class="article-tabs-wrapper">
      {% if section.settings.heading != blank %}
        <h2 class="h2" style="text-align: {{ section.settings.heading_alignment }}; margin-bottom: 24px;">
          {{ section.settings.heading }}
        </h2>
      {% endif %}

      <div class="article-tabs">
        <div class="article-tabs__nav" role="tablist">
          {% assign first_tab = true %}
          {% for i in (1..5) %}
            {% assign title_key = 'tab_' | append: i | append: '_title' %}
            {% assign tab_title = article.metafields.custom[title_key] %}

            {% if tab_title %}
              <button
                class="article-tabs__tab {% if first_tab %}article-tabs__tab--active{% endif %}"
                role="tab"
                aria-selected="{% if first_tab %}true{% else %}false{% endif %}"
                aria-controls="tab-panel-{{ i }}"
                id="tab-{{ i }}"
                data-index="{{ forloop.index0 }}"
              >
                {{ tab_title }}
              </button>
              {% assign first_tab = false %}
            {% endif %}
          {% endfor %}
        </div>

        <div class="article-tabs__content">
          {% assign first_panel = true %}
          {% for i in (1..5) %}
            {% assign title_key = 'tab_' | append: i | append: '_title' %}
            {% assign content_key = 'tab_' | append: i | append: '_content' %}
            {% assign tab_title = article.metafields.custom[title_key] %}
            {% assign tab_content = article.metafields.custom[content_key] %}

            {% if tab_title %}
              <div
                class="article-tabs__panel {% if first_panel %}article-tabs__panel--active{% endif %}"
                role="tabpanel"
                aria-labelledby="tab-{{ i }}"
                id="tab-panel-{{ i }}"
              >
                {% if tab_content %}
                  <div class="rte">
                    {{ article.metafields.custom[content_key] | metafield_tag }}
                  </div>
                {% else %}
                  <p class="article-tabs__empty">No content available for this tab.</p>
                {% endif %}
              </div>
              {% assign first_panel = false %}
            {% endif %}
          {% endfor %}
        </div>
      </div>
    </div>
  </div>

  <style>
    .article-tabs-wrapper {
      width: 100%;
    }
    .article-tabs {
      width: 100%;
      background: transparent;
    }

    .article-tabs__nav {
      display: flex;
      gap: 0;
      padding: 0;
      background: transparent;
      border-bottom: 2px solid rgba(var(--color-foreground), 0.1);
      overflow-x: auto;
      overflow-y: hidden;
      -webkit-overflow-scrolling: touch;
      scrollbar-width: none;
      margin-bottom: 32px;
    }

    .article-tabs__nav::-webkit-scrollbar {
      display: none;
    }

    .article-tabs__tab {
      padding: 14px 28px;
      cursor: pointer;
      border: none;
      background: transparent;
      font-size: 16px;
      font-weight: 500;
      color: rgba(var(--color-foreground), 0.7);
      transition: all 0.2s ease;
      white-space: nowrap;
      flex-shrink: 0;
      position: relative;
      border-bottom: 3px solid transparent;
      margin-bottom: -2px;
    }

    .article-tabs__tab:hover {
      color: rgba(var(--color-foreground), 0.95);
      background: rgba(var(--color-foreground), 0.04);
    }

    .article-tabs__tab--active {
      color: rgb(var(--color-foreground));
      font-weight: 600;
      border-bottom-color: rgb(var(--color-foreground));
    }

    .article-tabs__tab:focus-visible {
      outline: 2px solid rgba(var(--color-foreground), 0.3);
      outline-offset: 2px;
    }

    .article-tabs__content {
      min-height: 150px;
    }

    .article-tabs__panel {
      display: none;
    }

    .article-tabs__panel--active {
      display: block;
      animation: fadeIn 0.4s ease;
    }

    @keyframes fadeIn {
      from {
        opacity: 0;
        transform: translateY(10px);
      }
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    /* Blog-optimized RTE styles */
    .article-tabs__panel .rte h2 {
      color: rgb(var(--color-foreground));
      margin-bottom: 20px;
      font-size: 1.6em;
      font-weight: 600;
      line-height: 1.3;
    }

    .article-tabs__panel .rte h3 {
      color: rgb(var(--color-foreground));
      margin-top: 28px;
      margin-bottom: 16px;
      font-size: 1.3em;
      font-weight: 600;
    }

    .article-tabs__panel .rte h4 {
      color: rgb(var(--color-foreground));
      margin-top: 24px;
      margin-bottom: 12px;
      font-size: 1.1em;
      font-weight: 600;
    }

    .article-tabs__panel .rte h2:first-child,
    .article-tabs__panel .rte h3:first-child,
    .article-tabs__panel .rte h4:first-child {
      margin-top: 0;
    }

    .article-tabs__panel .rte p {
      line-height: 1.7;
      color: rgba(var(--color-foreground), 0.85);
      margin-bottom: 16px;
      font-size: 15px;
    }

    .article-tabs__panel .rte p:last-child {
      margin-bottom: 0;
    }

    .article-tabs__panel .rte strong,
    .article-tabs__panel .rte b {
      font-weight: 600;
      color: rgb(var(--color-foreground));
    }

    .article-tabs__panel .rte em,
    .article-tabs__panel .rte i {
      font-style: italic;
    }

    .article-tabs__panel .rte ul,
    .article-tabs__panel .rte ol {
      margin: 20px 0;
      padding-left: 28px;
    }

    .article-tabs__panel .rte li {
      margin-bottom: 10px;
      color: rgba(var(--color-foreground), 0.85);
      line-height: 1.6;
    }

    .article-tabs__panel .rte a {
      color: rgb(var(--color-foreground));
      text-decoration: underline;
      text-underline-offset: 2px;
      transition: opacity 0.2s ease;
    }

    .article-tabs__panel .rte a:hover {
      opacity: 0.7;
    }

    .article-tabs__panel .rte blockquote {
      margin: 20px 0;
      padding-left: 20px;
      border-left: 3px solid rgba(var(--color-foreground), 0.2);
      font-style: italic;
      color: rgba(var(--color-foreground), 0.75);
    }

    .article-tabs__panel .rte code {
      background: rgba(var(--color-foreground), 0.05);
      padding: 2px 6px;
      border-radius: 3px;
      font-family: 'Courier New', monospace;
      font-size: 0.9em;
      color: rgb(var(--color-foreground));
    }

    .article-tabs__panel .rte pre {
      background: rgba(var(--color-foreground), 0.05);
      border-left: 3px solid rgba(var(--color-foreground), 0.2);
      padding: 15px 20px;
      margin: 20px 0;
      border-radius: 4px;
      font-family: 'Courier New', monospace;
      font-size: 14px;
      overflow-x: auto;
      line-height: 1.6;
    }

    .article-tabs__empty {
      color: rgba(var(--color-foreground), 0.5);
      font-style: italic;
      text-align: center;
      padding: 40px 20px;
    }

    /* Mobile optimizations */
    @media screen and (max-width: 768px) {
      .article-tabs__nav {
        margin-bottom: 24px;
      }

      .article-tabs__tab {
        padding: 12px 20px;
        font-size: 15px;
      }

      .article-tabs__panel .rte {
        font-size: 15px;
      }

      .article-tabs__panel .rte h2 {
        font-size: 1.4em;
      }

      .article-tabs__panel .rte h3 {
        font-size: 1.2em;
      }

      .article-tabs__panel .rte h4 {
        font-size: 1.05em;
      }
    }
  </style>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const tabContainers = document.querySelectorAll('.article-tabs');

      tabContainers.forEach(container => {
        const tabs = container.querySelectorAll('.article-tabs__tab');
        const panels = container.querySelectorAll('.article-tabs__panel');

        tabs.forEach((tab, index) => {
          tab.addEventListener('click', function() {
            // Remove active class from all tabs and panels
            tabs.forEach(t => {
              t.classList.remove('article-tabs__tab--active');
              t.setAttribute('aria-selected', 'false');
            });
            panels.forEach(p => {
              p.classList.remove('article-tabs__panel--active');
            });

            // Add active class to clicked tab and corresponding panel
            tab.classList.add('article-tabs__tab--active');
            tab.setAttribute('aria-selected', 'true');
            if (panels[index]) {
              panels[index].classList.add('article-tabs__panel--active');
            }
          });
        });

        // Keyboard navigation
        tabs.forEach((tab, index) => {
          tab.addEventListener('keydown', function(e) {
            let newIndex = index;

            if (e.key === 'ArrowRight') {
              newIndex = index + 1 < tabs.length ? index + 1 : 0;
              e.preventDefault();
            } else if (e.key === 'ArrowLeft') {
              newIndex = index - 1 >= 0 ? index - 1 : tabs.length - 1;
              e.preventDefault();
            } else if (e.key === 'Home') {
              newIndex = 0;
              e.preventDefault();
            } else if (e.key === 'End') {
              newIndex = tabs.length - 1;
              e.preventDefault();
            } else {
              return;
            }

            tabs[newIndex].click();
            tabs[newIndex].focus();
          });
        });
      });
    });
  </script>
{% endif %}

{% schema %}
{
  "name": "Article Tabs",
  "class": "section-article-tabs",
  "settings": [
    {
      "type": "text",
      "id": "heading",
      "label": "Heading"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "left"
    },
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme",
      "default": "scheme-1"
    },
    {
      "type": "select",
      "id": "section_width",
      "label": "Section width",
      "options": [
        {
          "value": "page-width",
          "label": "Page width"
        },
        {
          "value": "full-width",
          "label": "Full width"
        }
      ],
      "default": "page-width"
    },
    {
      "type": "header",
      "content": "Padding"
    },
    {
      "type": "range",
      "id": "padding-block-start",
      "label": "Top padding",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding-block-end",
      "label": "Bottom padding",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "default": 40
    }
  ],
  "presets": [
    {
      "name": "Article Tabs"
    }
  ]
}
{% endschema %}
