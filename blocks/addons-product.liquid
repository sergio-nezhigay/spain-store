{% assign addon_products = product.metafields.custom.addon_products.value %}

{% if addon_products != blank and addon_products.size > 0 %}
<div class="product-addons" id="addons-{{ block.id }}" data-product-id="{{ product.id }}">
  <div class="addons-container">
    <div class="addons-header">
      <h3 class="addons-title">{{ block.settings.addon_title }}</h3>
      {% if block.settings.addon_subtitle != blank %}
      <p class="addons-subtitle">{{ block.settings.addon_subtitle }}</p>
      {% endif %}
    </div>

    <div class="addons-slider-wrapper">
      <button class="addons-nav addons-prev" aria-label="Previous">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M15 18L9 12L15 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>

      <div class="addons-slider">
        {% for addon in addon_products %}
          {% assign addon_variant = addon.selected_or_first_available_variant %}
          <div class="addon-card" data-index="{{ forloop.index0 }}">
            <div class="addon-inner">
              {% if addon.featured_image %}
              <div class="addon-image">
                <img
                  src="{{ addon.featured_image | image_url: width: 400, height: 400, crop: 'center' }}"
                  alt="{{ addon.title | escape }}"
                  width="400"
                  height="400"
                  loading="lazy"
                >
                {% if addon_variant.compare_at_price > addon_variant.price %}
                <span class="sale-badge">
                  -{{ addon_variant.compare_at_price | minus: addon_variant.price | times: 100 | divided_by: addon_variant.compare_at_price }}%
                </span>
                {% endif %}
              </div>
              {% endif %}

              <div class="addon-info">
                <h4 class="addon-name">{{ addon.title }}</h4>
                
                <div class="addon-price-wrapper">
                  {% if addon_variant.compare_at_price > addon_variant.price %}
                    <span class="addon-price sale">{{ addon_variant.price | money }}</span>
                    <span class="addon-price-compare">{{ addon_variant.compare_at_price | money }}</span>
                  {% else %}
                    <span class="addon-price">{{ addon_variant.price | money }}</span>
                  {% endif %}
                </div>

                <button 
                  class="addon-add-btn" 
                  data-variant-id="{{ addon_variant.id }}"
                  data-product-title="{{ addon.title | escape }}"
                  {% unless addon_variant.available %}disabled{% endunless %}
                >
                  {% if addon_variant.available %}
                    <span class="btn-content">
                      <span class="btn-icon">+</span>
                      <span class="btn-text">{{ block.settings.add_button_text }}</span>
                    </span>
                    <span class="btn-added">{{ block.settings.added_button_text }}</span>
                  {% else %}
                    <span class="btn-text">{{ block.settings.unavailable_button_text }}</span>
                  {% endif %}
                </button>
              </div>
            </div>
          </div>
        {% endfor %}
      </div>

      <button class="addons-nav addons-next" aria-label="Next">
        <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M9 18L15 12L9 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </div>

    {% if block.settings.show_addon_notification %}
    <div class="addon-notification hidden">
      <svg width="18" height="18" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M20 6L9 17L4 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
      <span class="notification-text"></span>
    </div>
    {% endif %}
  </div>
</div>
{% endif %}

<style>
  #addons-{{ block.id }} {
    margin: {{ block.settings.addon_margin_top }}px 0 {{ block.settings.addon_margin_bottom }}px;
    padding: 0;
  }

  #addons-{{ block.id }} .addons-container {
    max-width: 100%;
    margin: 0 auto;
    padding: 0;
  }

  #addons-{{ block.id }} .addons-header {
    text-align: center;
    margin-bottom: 25px;
  }

  #addons-{{ block.id }} .addons-title {
    font-size: {{ block.settings.addon_title_font_size }}px;
    font-weight: 500;
    letter-spacing: 0.5px;
    color: {{ block.settings.addon_title_color }};
    margin: 0 0 8px 0;
  }

  #addons-{{ block.id }} .addons-subtitle {
    font-size: {{ block.settings.addon_subtitle_font_size }}px;
    color: {{ block.settings.addon_subtitle_color }};
    font-weight: 300;
    margin: 0;
  }

  #addons-{{ block.id }} .addons-slider-wrapper {
    position: relative;
    max-width: 650px;
    margin: 0 auto;
    padding: 0 20px;
  }

  #addons-{{ block.id }} .addons-slider {
    position: relative;
    overflow: hidden;
    min-height: 180px;
  }

  #addons-{{ block.id }} .addon-card {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    padding: 0 10px;
    opacity: 0;
    transform: translateX(100%);
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    pointer-events: none;
  }

  #addons-{{ block.id }} .addon-card.active {
    position: relative;
    opacity: 1;
    transform: translateX(0);
    pointer-events: auto;
  }

  #addons-{{ block.id }} .addon-card.slide-left {
    transform: translateX(-100%);
    opacity: 0;
  }

  #addons-{{ block.id }} .addon-card.slide-right {
    transform: translateX(100%);
    opacity: 0;
  }

  #addons-{{ block.id }} .addon-inner {
    background: {{ block.settings.addon_card_background }};
    border-radius: 3px;
    overflow: hidden;
    display: flex;
    align-items: center;
    gap: 24px;
    padding: 20px;
    border: 1px solid {{ block.settings.addon_card_border }};
    transition: all 0.3s ease;
  }

  #addons-{{ block.id }} .addon-inner:hover {
    border-color: {{ block.settings.addon_card_hover_border }};
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
  }

  #addons-{{ block.id }} .addon-image {
    position: relative;
    flex: 0 0 140px;
    width: 140px;
    height: 140px;
    border-radius: 3px;
    overflow: hidden;
    background: #fafafa;
  }

  #addons-{{ block.id }} .addon-image img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  #addons-{{ block.id }} .sale-badge {
    position: absolute;
    top: 8px;
    left: 8px;
    padding: 4px 10px;
    background: {{ block.settings.addon_sale_badge_bg }};
    color: {{ block.settings.addon_sale_badge_color }};
    font-size: 0.7rem;
    font-weight: 600;
    letter-spacing: 0.5px;
    border-radius: 2px;
  }

  #addons-{{ block.id }} .addon-info {
    flex: 1;
    display: flex;
    flex-direction: column;
    gap: 10px;
  }

  #addons-{{ block.id }} .addon-name {
    font-size: 20px;
    font-weight: 500;
    color: {{ block.settings.addon_product_title_color }};
    margin: 0;
    line-height: 1.3;
  }

  #addons-{{ block.id }} .addon-price-wrapper {
    display: flex;
    align-items: center;
    gap: 10px;
  }

  #addons-{{ block.id }} .addon-price {
    font-size: 1.2rem;
    font-weight: 600;
    color: {{ block.settings.addon_price_color }};
  }

  #addons-{{ block.id }} .addon-price.sale {
    color: {{ block.settings.addon_sale_price_color }};
  }

  #addons-{{ block.id }} .addon-price-compare {
    font-size: 1rem;
    color: {{ block.settings.addon_compare_price_color }};
    text-decoration: line-through;
    opacity: 0.6;
  }

  #addons-{{ block.id }} .addon-add-btn {
    width: 100%;
    padding: 13px 24px;
    background: {{ block.settings.addon_button_bg }};
    color: {{ block.settings.addon_button_text }};
    border: 2px solid {{ block.settings.addon_button_border }};
    font-size: 0.85rem;
    font-weight: 600;
    letter-spacing: 0.5px;
    text-transform: uppercase;
    cursor: pointer;
    transition: all 0.3s ease;
    border-radius: 3px;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 6px;
    position: relative;
  }

  #addons-{{ block.id }} .addon-add-btn .btn-content {
    display: flex;
    align-items: center;
    gap: 6px;
  }

  #addons-{{ block.id }} .addon-add-btn .btn-added {
    display: none;
  }

  #addons-{{ block.id }} .addon-add-btn:hover:not(:disabled):not(.in-cart) {
    background: {{ block.settings.addon_button_hover_bg }};
    color: {{ block.settings.addon_button_hover_text }};
    border-color: {{ block.settings.addon_button_hover_border }};
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.12);
  }

  #addons-{{ block.id }} .addon-add-btn:disabled {
    opacity: 0.4;
    cursor: not-allowed;
  }

  #addons-{{ block.id }} .addon-add-btn .btn-icon {
    font-size: 1.2rem;
    line-height: 1;
  }

  #addons-{{ block.id }} .addon-add-btn.in-cart {
    background: {{ block.settings.addon_button_incart_bg }};
    color: {{ block.settings.addon_button_incart_text }};
    border-color: {{ block.settings.addon_button_incart_border }};
    pointer-events: none;
  }

  #addons-{{ block.id }} .addon-add-btn.in-cart .btn-content {
    display: none;
  }

  #addons-{{ block.id }} .addon-add-btn.in-cart .btn-added {
    display: block;
  }

  #addons-{{ block.id }} .addon-add-btn.loading .btn-content {
    opacity: 0;
  }

  #addons-{{ block.id }} .addon-add-btn.loading::after {
    content: '';
    position: absolute;
    width: 16px;
    height: 16px;
    border: 2px solid currentColor;
    border-right-color: transparent;
    border-radius: 50%;
    animation: spin-{{ block.id }} 0.6s linear infinite;
  }

  @keyframes spin-{{ block.id }} {
    to { transform: rotate(360deg); }
  }

  #addons-{{ block.id }} .addons-nav {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    width: 38px;
    height: 38px;
    background: {{ block.settings.addon_nav_bg }};
    color: {{ block.settings.addon_nav_color }};
    border: 1px solid {{ block.settings.addon_nav_border }};
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease;
    z-index: 2;
  }

  #addons-{{ block.id }} .addons-nav:hover {
    background: {{ block.settings.addon_nav_hover_bg }};
    color: {{ block.settings.addon_nav_hover_color }};
    border-color: {{ block.settings.addon_nav_hover_bg }};
    transform: translateY(-50%) scale(1.08);
  }

  #addons-{{ block.id }} .addons-nav:disabled {
    opacity: 0.3;
    pointer-events: none;
  }

  #addons-{{ block.id }} .addons-prev {
    left: -18px;
  }

  #addons-{{ block.id }} .addons-next {
    right: -18px;
  }

  #addons-{{ block.id }} .addon-notification {
    position: fixed;
    bottom: 30px;
    left: 50%;
    transform: translateX(-50%) translateY(100px);
    background: {{ block.settings.addon_notif_bg }};
    color: {{ block.settings.addon_notif_color }};
    padding: 12px 20px;
    border-radius: 30px;
    box-shadow: 0 6px 24px rgba(0, 0, 0, 0.2);
    z-index: 9999;
    transition: transform 0.3s ease;
    display: flex;
    align-items: center;
    gap: 10px;
    font-size: 0.85rem;
    font-weight: 500;
  }

  #addons-{{ block.id }} .addon-notification.show {
    transform: translateX(-50%) translateY(0);
  }

  #addons-{{ block.id }} .hidden {
    display: none;
  }

  @media (max-width: 768px) {
    #addons-{{ block.id }} .addons-slider-wrapper {
      max-width: 100%;
      padding: 0 15px;
    }

    #addons-{{ block.id }} .addon-inner {
      flex-direction: column;
      text-align: center;
      padding: 20px;
    }

    #addons-{{ block.id }} .addon-image {
      flex: 0 0 130px;
      width: 130px;
      height: 130px;
    }

    #addons-{{ block.id }} .addon-info {
      width: 100%;
    }

    #addons-{{ block.id }} .addon-price-wrapper {
      justify-content: center;
    }

    #addons-{{ block.id }} .addons-nav {
      width: 34px;
      height: 34px;
    }

    #addons-{{ block.id }} .addons-prev {
      left: -8px;
    }

    #addons-{{ block.id }} .addons-next {
      right: -8px;
    }
  }
</style>

<script>
(function() {
  const block = document.getElementById('addons-{{ block.id }}');
  if (!block) return;

  const slider = block.querySelector('.addons-slider');
  const cards = Array.from(block.querySelectorAll('.addon-card'));
  const prevBtn = block.querySelector('.addons-prev');
  const nextBtn = block.querySelector('.addons-next');
  const addButtons = block.querySelectorAll('.addon-add-btn');
  const notification = block.querySelector('.addon-notification');

  let currentIndex = 0;

  function updateSlider() {
    cards.forEach((card, index) => {
      card.classList.remove('active', 'slide-left', 'slide-right');
      
      if (index === currentIndex) {
        card.classList.add('active');
      } else if (index < currentIndex) {
        card.classList.add('slide-left');
      } else {
        card.classList.add('slide-right');
      }
    });

    if (prevBtn) prevBtn.disabled = currentIndex === 0;
    if (nextBtn) nextBtn.disabled = currentIndex === cards.length - 1;
  }

  if (prevBtn) {
    prevBtn.addEventListener('click', () => {
      if (currentIndex > 0) {
        currentIndex--;
        updateSlider();
      }
    });
  }

  if (nextBtn) {
    nextBtn.addEventListener('click', () => {
      if (currentIndex < cards.length - 1) {
        currentIndex++;
        updateSlider();
      }
    });
  }

  async function updateHorizonCart() {
    try {
      const cartResponse = await fetch('/cart.js');
      const cart = await cartResponse.json();
      
      const cartCountElements = document.querySelectorAll('.cart-count-bubble span, [data-cart-count], .cart-count');
      cartCountElements.forEach(el => {
        el.textContent = cart.item_count;
        if (cart.item_count > 0) {
          el.classList.remove('hidden');
          const bubble = el.closest('.cart-count-bubble');
          if (bubble) bubble.classList.remove('hidden');
        }
      });

      const cartDrawer = document.querySelector('cart-drawer');
      if (cartDrawer) {
        cartDrawer.dispatchEvent(new Event('change'));
        
        const cartItems = cartDrawer.querySelector('.drawer__inner');
        if (cartItems) {
          const sectionsResponse = await fetch('/?sections=cart-drawer');
          const sections = await sectionsResponse.json();
          if (sections['cart-drawer']) {
            const tempDiv = document.createElement('div');
            tempDiv.innerHTML = sections['cart-drawer'];
            const newContent = tempDiv.querySelector('.drawer__inner');
            if (newContent) {
              cartItems.innerHTML = newContent.innerHTML;
            }
          }
        }
      }

      document.dispatchEvent(new CustomEvent('cart:refresh', {
        bubbles: true,
        detail: { cart: cart }
      }));

    } catch (error) {
      console.error('Cart update error:', error);
    }
  }

  addButtons.forEach(button => {
    button.addEventListener('click', async function() {
      if (this.disabled || this.classList.contains('loading') || this.classList.contains('in-cart')) return;

      const variantId = this.dataset.variantId;
      const productTitle = this.dataset.productTitle;
      
      this.classList.add('loading');

      try {
        const formData = new FormData();
        formData.append('id', variantId);
        formData.append('quantity', 1);

        const response = await fetch('/cart/add.js', {
          method: 'POST',
          body: formData
        });

        if (!response.ok) throw new Error('Failed to add to cart');

        this.classList.remove('loading');
        this.classList.add('in-cart');
        
        if (notification) {
          const notificationText = notification.querySelector('.notification-text');
          notificationText.textContent = `${productTitle} {{ block.settings.addon_success_message }}`;
          notification.classList.remove('hidden');
          notification.classList.add('show');
          
          setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => notification.classList.add('hidden'), 300);
          }, 3000);
        }

        await updateHorizonCart();

      } catch (error) {
        console.error('Error:', error);
        this.classList.remove('loading');
        
        if (notification) {
          const notificationText = notification.querySelector('.notification-text');
          notificationText.textContent = '{{ block.settings.addon_error_message }}';
          notification.classList.remove('hidden');
          notification.classList.add('show');
          
          setTimeout(() => {
            notification.classList.remove('show');
            setTimeout(() => notification.classList.add('hidden'), 300);
          }, 3000);
        }
      }
    });
  });

  updateSlider();
})();
</script>

{% schema %}
{
  "name": "Product Addons",
  "settings": [
    {
      "type": "header",
      "content": "Layout"
    },
    {
      "type": "range",
      "id": "addon_margin_top",
      "min": 0,
      "max": 80,
      "step": 10,
      "unit": "px",
      "label": "Margin Top",
      "default": 30
    },
    {
      "type": "range",
      "id": "addon_margin_bottom",
      "min": 0,
      "max": 80,
      "step": 10,
      "unit": "px",
      "label": "Margin Bottom",
      "default": 30
    },
    {
      "type": "header",
      "content": "Header"
    },
    {
      "type": "text",
      "id": "addon_title",
      "label": "Title",
      "default": "Complete Your Look"
    },
    {
      "type": "range",
      "id": "addon_title_font_size",
      "min": 16,
      "max": 32,
      "step": 2,
      "unit": "px",
      "label": "Title Font Size",
      "default": 20
    },
    {
      "type": "text",
      "id": "addon_subtitle",
      "label": "Subtitle",
      "default": "Hand-picked items that pair perfectly"
    },
    {
      "type": "range",
      "id": "addon_subtitle_font_size",
      "min": 12,
      "max": 18,
      "step": 1,
      "unit": "px",
      "label": "Subtitle Font Size",
      "default": 13
    },
    {
      "type": "header",
      "content": "Display"
    },
    {
      "type": "checkbox",
      "id": "show_addon_notification",
      "label": "Show Notification",
      "default": true
    },
    {
      "type": "header",
      "content": "Text"
    },
    {
      "type": "text",
      "id": "add_button_text",
      "label": "Add Button",
      "default": "Add to Cart"
    },
    {
      "type": "text",
      "id": "added_button_text",
      "label": "In Cart Text",
      "default": "In Cart"
    },
    {
      "type": "text",
      "id": "unavailable_button_text",
      "label": "Unavailable Text",
      "default": "Sold Out"
    },
    {
      "type": "text",
      "id": "addon_success_message",
      "label": "Success Message",
      "default": "added to cart!"
    },
    {
      "type": "text",
      "id": "addon_error_message",
      "label": "Error Message",
      "default": "Could not add to cart"
    },
    {
      "type": "header",
      "content": "Colors - General"
    },
    {
      "type": "color",
      "id": "addon_title_color",
      "label": "Title",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_subtitle_color",
      "label": "Subtitle",
      "default": "#666666"
    },
    {
      "type": "header",
      "content": "Colors - Card"
    },
    {
      "type": "color",
      "id": "addon_card_background",
      "label": "Card Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "addon_card_border",
      "label": "Card Border",
      "default": "#e5e5e5"
    },
    {
      "type": "color",
      "id": "addon_card_hover_border",
      "label": "Card Hover Border",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_product_title_color",
      "label": "Product Title",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_price_color",
      "label": "Price",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_sale_price_color",
      "label": "Sale Price",
      "default": "#d32f2f"
    },
    {
      "type": "color",
      "id": "addon_compare_price_color",
      "label": "Compare Price",
      "default": "#999999"
    },
    {
      "type": "color",
      "id": "addon_sale_badge_bg",
      "label": "Sale Badge Background",
      "default": "#d32f2f"
    },
    {
      "type": "color",
      "id": "addon_sale_badge_color",
      "label": "Sale Badge Text",
      "default": "#ffffff"
    },
    {
      "type": "header",
      "content": "Colors - Button"
    },
    {
      "type": "color",
      "id": "addon_button_bg",
      "label": "Button Background",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_button_text",
      "label": "Button Text",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "addon_button_border",
      "label": "Button Border",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_button_hover_bg",
      "label": "Button Hover Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "addon_button_hover_text",
      "label": "Button Hover Text",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_button_hover_border",
      "label": "Button Hover Border",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_button_incart_bg",
      "label": "In Cart Button Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "addon_button_incart_text",
      "label": "In Cart Button Text",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_button_incart_border",
      "label": "In Cart Button Border",
      "default": "#1a1a1a"
    },
    {
      "type": "header",
      "content": "Colors - Navigation"
    },
    {
      "type": "color",
      "id": "addon_nav_bg",
      "label": "Nav Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "addon_nav_color",
      "label": "Nav Icon",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_nav_border",
      "label": "Nav Border",
      "default": "#e5e5e5"
    },
    {
      "type": "color",
      "id": "addon_nav_hover_bg",
      "label": "Nav Hover Background",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_nav_hover_color",
      "label": "Nav Hover Icon",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "addon_notif_bg",
      "label": "Notification Background",
      "default": "#1a1a1a"
    },
    {
      "type": "color",
      "id": "addon_notif_color",
      "label": "Notification Text",
      "default": "#ffffff"
    }
  ],
  "presets": [
    {
      "name": "Product Addons"
    }
  ]
}
{% endschema %}