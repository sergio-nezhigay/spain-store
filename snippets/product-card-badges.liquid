{%- doc -%}
  Renders product badges for the product card.

  @param {object} product - The product object.
  @param {object} settings - The theme settings object.

  @example
  {% render 'product-card-badges', product: product, settings: settings %}
{%- enddoc -%}

<div
  class="product-badges product-badges--{{ settings.badge_position }}"
  style="
    --badge-border-radius: {{ settings.badge_corner_radius }}px;
    --badge-font-family: var(--font-{{ settings.badge_font_family }}--family); --badge-font-weight: var(--font-{{ settings.badge_font_family }}--weight); --badge-text-transform: {{ settings.badge_text_transform }};
  "
>
  {%- comment -%} Check if product is in Bestseller collection {%- endcomment -%}
  {%- assign is_bestseller = false -%}
  {%- for collection in product.collections -%}
    {%- if collection.handle == 'bestseller' -%}
      {%- assign is_bestseller = true -%}
      {%- break -%}
    {%- endif -%}
  {%- endfor -%}

  {%- comment -%} Display badge with priority: bestseller > sold out > sale {%- endcomment -%}
  {%- if is_bestseller -%}
    <div class="product-badges__badge product-badges__badge--icon product-badges__badge--bestseller">
      {{ settings.badge_bestseller_svg }}
    </div>
  {%- elsif product.available == false or product.compare_at_price > product.price and product.available -%}
    <div
      class="
        product-badges__badge product-badges__badge--rectangle
        {% if product.available == false %} color-{{ settings.badge_sold_out_color_scheme }}{% elsif product.compare_at_price > product.price %} color-{{ settings.badge_sale_color_scheme }}{% endif %}
      "
    >
      {%- if product.available == false -%}
        {{ 'content.product_badge_sold_out' | t }}
      {%- elsif product.compare_at_price > product.price -%}
        {{ 'content.product_badge_sale' | t }}
      {%- endif -%}
    </div>
  {%- endif -%}
</div>

{% stylesheet %}
  .product-badges {
    --badge-inset: max(var(--padding-xs), calc((var(--border-radius) + var(--padding-xs)) * (1 - cos(45deg))));

    position: absolute;
    z-index: var(--layer-flat);
  }

  .product-badges--bottom-left {
    bottom: calc(var(--badge-inset) + var(--padding-block-start));
    left: calc(var(--badge-inset) + var(--padding-inline-start));
  }

  .product-badges--top-left {
    top: calc(var(--badge-inset) + var(--padding-block-start));
    left: calc(var(--badge-inset) + var(--padding-inline-start));
  }

  .product-badges--top-right {
    top: calc(var(--badge-inset) + var(--padding-block-start));
    right: calc(var(--badge-inset) + var(--padding-inline-start));
  }

  .product-badges__badge {
    --badge-font-size: var(--font-size--xs);

    display: flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    color: var(--color-foreground);
    background: var(--color-background);
    font-size: var(--badge-font-size);
    font-family: var(--badge-font-family);
    font-weight: var(--badge-font-weight);
    text-transform: var(--badge-text-transform);
    border-radius: var(--badge-border-radius);
  }

  .product-badges__badge--rectangle {
    padding-block: var(--badge-rectangle-padding-block);
    padding-inline: var(--badge-rectangle-padding-inline);
  }

  .product-badges__badge--icon {
    width: 2rem;
    height: 2rem;
    border-radius: 50%;
    padding: 0.4rem;
  }

  .product-badges__badge--bestseller {
    background: linear-gradient(135deg, #FFD700 0%, #FFA500 100%);
    color: #1a1a1a;
    box-shadow: 0 2px 8px rgba(255, 215, 0, 0.4);
  }

  @media (min-width: 750px) {
    .product-badges__badge--icon {
      width: 2.25rem;
      height: 2.25rem;
    }
  }
{% endstylesheet %}
