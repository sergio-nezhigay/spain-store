{% comment %}
  Smart text-to-HTML converter for size chart content

  Usage:
    {% render 'format-text-content', content: text_string %}

  Converts plain text with line breaks into formatted HTML:
  - Double line breaks → <p> paragraphs
  - Lines starting with • or - → <ul> bullet lists
  - Lines ending with : → <h4> headings
  - Preserves line breaks within paragraphs
{% endcomment %}

{% liquid
  # Check if content is a metafield object with .value property
  if content.value
    assign content_text = content.value
  else
    assign content_text = content
  endif

  # Check if content already contains HTML tags
  if content_text contains '<p>' or content_text contains '<div>' or content_text contains '<table>'
    # Already HTML, output as-is
    echo content_text
  elsif content_text contains '"type":"root"' or content_text contains '"type":"paragraph"'
    # This is JSON structured content - we can't parse complex JSON in Liquid
    # Instead, just extract and format the text content from the value field

    # Extract the value field from the JSON
    assign json_parts = content_text | split: '"value":"'

    if json_parts.size > 1
      # Get everything after "value":"
      assign value_part = json_parts[1]
      # Get everything before the closing quote (considering escaped quotes)
      assign text_content = value_part | split: '"}]}]}' | first

      # Clean up escaped characters
      assign text_content = text_content | replace: '\n\n', '|||PARAGRAPH|||'
      assign text_content = text_content | replace: '\n', '<br />'
      assign text_content = text_content | replace: '|||PARAGRAPH|||', '</p><p>'

      # Wrap in paragraph
      echo '<p>'
      echo text_content
      echo '</p>'
    else
      # Fallback: just output the raw content
      echo content_text
    endif
  else
    # Convert plain text to HTML

    # Split by double newlines to get blocks
    assign blocks = content_text | newline_to_br | split: '<br /><br />'

    assign in_list = false

    for block in blocks
      # Remove extra <br /> tags from split
      assign block = block | strip
      assign block_stripped = block | replace: '<br />', ''
      assign block_stripped = block_stripped | strip

      if block_stripped == blank
        continue
      endif

      # Check if this is a bullet list item
      assign first_char = block_stripped | slice: 0, 1
      assign is_bullet = false

      if first_char == '•' or first_char == '-'
        assign is_bullet = true
      endif

      # Check if this is a heading (ends with :)
      assign last_char = block_stripped | slice: -1, 1
      assign is_heading = false

      if last_char == ':'
        assign is_heading = true
      endif

      # Handle block based on type
      if is_bullet
        # Start list if needed
        if in_list == false
          echo '<ul>'
          assign in_list = true
        endif

        # Remove bullet character and output as list item
        assign item_text = block_stripped | remove_first: '•' | remove_first: '-' | strip
        echo '<li>'
        echo item_text
        echo '</li>'
      else
        # Close list if needed
        if in_list
          echo '</ul>'
          assign in_list = false
        endif

        # Output as heading or paragraph
        if is_heading
          echo '<h4>'
          echo block
          echo '</h4>'
        else
          echo '<p>'
          echo block
          echo '</p>'
        endif
      endif
    endfor

    # Close list if still open
    if in_list
      echo '</ul>'
    endif
  endif
%}
